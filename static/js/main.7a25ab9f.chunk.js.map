{"version":3,"sources":["Components/Sidebar.js","Components/TodoItem.js","App.js","index.js","images/Profile b&w.jpg"],"names":["ProfileImage","styled","img","EverythingCenter","div","Sidebar","props","user","name","src","profileImg","TodoItemsLi","li","BoldText","p","DeleteButton","button","TodoItem","todo","title","description","isCompleted","id","type","checked","onChange","handleComplete","onClick","handleDelete","App","useState","shortid","generate","todoList","setTodoList","avatar","profile","setTitle","setDescription","handleKeyPress","event","key","handleButtonClick","prevList","handleCompletedTodo","itemId","newList","map","handleDeleteTodo","lessOneTodo","filter","Fragment","Content","IncompleteTodo","InputField","value","e","target","onKeyPress","CompletedTodo","ul","form","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7a25ab9f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport profileImg from \"../images/Profile b&w.jpg\";\nfunction Sidebar(props) {\n  return (\n    <EverythingCenter>\n      <h2>Hello {props.user.name}!</h2>\n      <ProfileImage src={profileImg} />\n    </EverythingCenter>\n  );\n}\n\nconst ProfileImage = styled.img`\n  height: 5rem;\n  width: 5rem;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nconst EverythingCenter = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default Sidebar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoItem = (props) => {\n  const { title, description, isCompleted, id } = props.todo;\n  return (\n    <TodoItemsLi>\n      <p>\n        <BoldText>Title: </BoldText> {title}\n      </p>\n      <p>\n        <BoldText>Description: </BoldText> {description}\n      </p>\n      <label>\n        <em>Check when done!</em>\n      </label>\n      <input\n        type=\"checkbox\"\n        checked={isCompleted}\n        onChange={() => props.handleComplete(id)}\n      />\n      <DeleteButton onClick={() => props.handleDelete(id)}>Delete</DeleteButton>\n    </TodoItemsLi>\n  );\n};\n\nconst TodoItemsLi = styled.li`\n  margin-top: 2rem;\n  padding: 1rem;\n  border: solid;\n  background-color: lightyellow;\n`;\nconst BoldText = styled.p`\n  font-weight: bold;\n`;\n\nconst DeleteButton = styled.button`\n  margin-left: 4rem;\n  background-color: darkred;\n  color: white;\n`;\n\nexport default TodoItem;\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport profile from \"./images/Profile b&w.jpg\";\nimport Sidebar from \"./Components/Sidebar\";\nimport TodoItem from \"./Components/TodoItem\";\nimport shortid from \"shortid\";\nimport styled from \"styled-components\";\n\nexport default function App() {\n  const [todoList, setTodoList] = useState([\n    {\n      title: \"Finish portfolio\",\n      description: \"finish the portfolio\",\n      isCompleted: false,\n      id: shortid.generate(),\n    },\n    {\n      title: \"Feed Dog\",\n      description: \"Take out food and fee dog\",\n      isCompleted: false,\n      id: shortid.generate(),\n    },\n    {\n      title: \"Finish portfolio\",\n      description: \"Do HTML, CSS and JavaScript\",\n      isCompleted: false,\n      id: shortid.generate(),\n    },\n  ]);\n\n  // const [user, setUser] = useState({\n  //   name: \"Jon\",\n  //   avatar: profile,\n  // });\n\n  const user = [\n    {\n      user: \"Jon Pynes\",\n      avatar: profile,\n    },\n  ];\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  //const [isCompleted, setIsCompleted] = useState(\"false\")\n\n  function handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      handleButtonClick();\n    }\n  }\n\n  function handleChangeTitle(e) {\n    setTitle(e.target.value);\n  }\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n  const resetInputField = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n\n  const handleButtonClick = () => {\n    if (title === \"\" || description === \"\") {\n      return;\n    }\n    setTodoList((prevList) => [\n      ...prevList,\n      {\n        title: title,\n        description: description,\n        isCompleted: false,\n        id: shortid.generate(),\n      },\n    ]);\n    resetInputField();\n  };\n\n  function handleCompletedTodo(itemId) {\n    let newList = todoList.map((todo) => {\n      if (todo.id === itemId) {\n        return { ...todo, isCompleted: !todo.isCompleted };\n      }\n      return todo;\n    });\n    setTodoList(newList);\n  }\n\n  function handleDeleteTodo(itemId) {\n    let lessOneTodo = todoList.filter((todo) => todo.id !== itemId);\n    setTodoList(lessOneTodo);\n  }\n\n  return (\n    <React.Fragment>\n      <Content>\n        <Sidebar user={user} />\n        <h1>TODO</h1>\n        <IncompleteTodo>\n          {todoList\n            .filter((todo) => !todo.isCompleted)\n            .map((todo) => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                handleComplete={handleCompletedTodo}\n                handleDelete={handleDeleteTodo}\n              />\n            ))}\n        </IncompleteTodo>\n        <InputField>\n          <label>Add a Title </label>\n          <input\n            id=\"new-title\"\n            value={title}\n            onChange={handleChangeTitle}\n            onKeyPress={handleKeyPress}\n          />\n          <p> </p>\n          <label>Add the description </label>\n          <input\n            id=\"new-description\"\n            value={description}\n            onChange={handleChangeDescription}\n            onKeyPress={handleKeyPress}\n          />\n        </InputField>\n        <p> </p>\n        <button onClick={() => handleButtonClick()}>Add New ToDo</button>\n        <p></p>\n        <h2>COMPLETED TODO'S</h2>\n        <CompletedTodo>\n          {todoList\n            .filter((todo) => todo.isCompleted)\n            .map((todo) => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                handleComplete={handleCompletedTodo}\n                handleDelete={handleDeleteTodo}\n              />\n            ))}\n        </CompletedTodo>\n      </Content>\n    </React.Fragment>\n  );\n}\n\nconst IncompleteTodo = styled.ul`\n  list-style: none;\n`;\n\nconst InputField = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst CompletedTodo = styled.ul`\n  color: black;\n  text-decoration-line: line-through;\n  text-decoration-color: red;\n  list-style: none;\n`;\nconst Content = styled.div`\n  max-width: 500px;\n  margin: auto;\n  background: gold;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/Profile b&w.c1027b96.jpg\";"],"sourceRoot":""}